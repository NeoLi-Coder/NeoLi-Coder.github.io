const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":15,\"nextId\":15,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-f0a2fdb2\",\"2\":\"v-3a16e965\",\"3\":\"v-3a16e965#node-js安装\",\"4\":\"v-3a16e965#nvm安装\",\"5\":\"v-3a16e965#nvm常用指令\",\"6\":\"v-25734b46\",\"7\":\"v-25734b46#问题场景\",\"8\":\"v-25734b46#业务耦合\",\"9\":\"v-25734b46#数据隐私\",\"10\":\"v-25734b46#安全性和合规性\",\"11\":\"v-25734b46#调用方式\",\"12\":\"v-3aa0764a\",\"13\":\"v-2f2f5b2e\",\"14\":\"v-374a1c4f\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[9],\"2\":[2],\"3\":[2,11],\"4\":[1,18],\"5\":[1,18],\"6\":[1],\"7\":[1,15],\"8\":[1,18],\"9\":[1,7],\"10\":[1,58],\"11\":[1,40],\"12\":[1],\"13\":[1],\"14\":[1]},\"averageFieldLength\":[1.6666666666666667,16.65277777777778],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"h\":\"You're Not Forgetful My System for Memorising Everything\"},\"2\":{\"h\":\"Node.js安装指南\"},\"3\":{\"h\":\"node.js安装\",\"t\":[\"如果只是搭建博客使用，可以只安装node.js，推荐教程： Node.js下载安装及环境配置教程【超详细】_nodejs下载_WHF__的博客-CSDN博客\"]},\"4\":{\"h\":\"nvm安装\",\"t\":[\"如果是开发使用，比如我需要开发vue，工作使用的nodejs版本是14.16.1，博客搭建使用的是18.18.0，这样就需要管理多版本nodejs，单个安装就不方便，我的方案是使用nvm，可以方便管理多个nodejs版本，推荐安装教程： nvm安装和使用保姆级教程（详细）_nvm 教程-CSDN博客\"]},\"5\":{\"h\":\"nvm常用指令\",\"t\":[\"安装指定版本的Node.js\",\"nvm install <version> \",\"使用指定版本的Node.js\",\"nvm use <version> \",\"列出所有已安装的Node.js版本\",\"nvm ls \",\"显示当前正在使用的Node.js版本\",\"nvm current \",\"为指定的版本设置一个别名\",\"nvm alias <name> <version> \",\"卸载指定版本的Node.js\",\"nvm uninstall <version> \"]},\"6\":{\"h\":\"如何对二方提供服务\"},\"7\":{\"h\":\"问题场景\",\"t\":[\"张三法外狂徒公司有两个团队，坑蒙拐骗团队a和敲诈勒索团队b，a负责人员系统，已有查询所有法外狂徒的成员信息的业务功能，b团队（二方）的敲诈系统想要使用a系统人员数据，防止敲诈到自己人，问a系统应该如何向b系统提供数据服务，如何思考？\",\"思考方向\",\"从业务耦合、数据隐私、安全性、合规性等方面进行考虑\"]},\"8\":{\"h\":\"业务耦合\",\"t\":[\"首先，这个数据a和b系统都需要使用，b依赖于a，如果直接使用原来接口，那么a和b的耦合度就很高，a和b的修改都会影响到对方，所以这里必须重新封装一个接口以提供给b使用，b使用接口时，b系统不需要关心a系统如何实现，只需要关心接口如何使用即可。 直接给表可以消除业务耦合问题，但是，这样会相应给出数据库相关信息，带来其他风险，并且由于给表，a系统便无法对b用户进行鉴权和流量控制，弊远大于利。\"]},\"9\":{\"h\":\"数据隐私\",\"t\":[\"数据隐私问题，主要考虑数据脱敏，a系统提供给b系统的人员数据，a系统需要对数据进行脱敏处理，只提供必要的数据，以防止敏感信息泄露。\"]},\"10\":{\"h\":\"安全性和合规性\",\"t\":[\"一个合理的数据提供，须满足以下条件\",\"定义清晰的API接口： 确保提供清晰、稳定、易于理解的API接口，以便二方团队能够方便地调用和集成。\",\"访问控制和权限管理： 在服务提供方（a团队系统）中实现严格的访问控制和权限管理机制，确保只有授权的人员能够访问敏感数据。可以使用 API 密钥、OAuth 认证等方式。\",\"数据脱敏和最小化原则： 考虑在服务提供方中对返回的数据进行脱敏处理，仅返回二方团队所需的最小化数据，以减少敏感信息的泄露风险。\",\"合同和协议： 签订明确的服务合同和协议，明确数据使用的条件、期限、限制等。这有助于规范数据共享的方式，并为双方提供法律保障。\",\"日志和监控： 在服务提供方实现详细的日志记录和监控机制，以便随时追踪和审计数据的访问情况，确保在出现问题时能够进行有效的调查。\",\"版本控制： 如果可能，考虑实现API的版本控制，以确保对接口进行变更时不会影响到二方系统的正常运行。这可以通过在API路径中包含版本号来实现。\",\"故障处理： 在API设计中考虑到可能的故障情况，实现适当的错误处理机制，提供有用的错误信息，以便二方团队能够更好地排除问题。\",\"沟通和培训： 建立良好的沟通渠道，确保两个团队之间能够及时交流和解决问题。为二方团队提供必要的培训和文档，以便他们更好地使用服务。\",\"以上建议旨在确保数据的安全性和合规性，同时提供方便、可靠的服务。在实际应用中，还可能需要根据具体情况进一步定制解决方案。\",\"日常开发中虽然不能说完全满足上述条件，但是有些条件必须是要考虑的，比如：API接口文档、访问控制和权限管理、数据脱敏和最小化原则、故障处理，最好是要有版本控制方便后续跟进。\"]},\"11\":{\"h\":\"调用方式\",\"t\":[\"数据传递可以有多种方式，比如导出excel等文件交给b团队，提供接口给b团队调用，这里又可以有多种实现方式，比如：HTTP调用，RPC调用，MQ调用等\",\"导出文件的方式：这种方式比较简单，适合办公类的数据，比如：销售数据，财务数据等，但是缺点也很明显，就是数据量大的时候，导出的文件会比较大，而且文件格式、文本排版比较麻烦。\",\"HTTP调用： HTTP调用相对来说比较简单易用。它使用明文文本进行通信，方便调试和排查问题。但是相对于二进制协议，如gRPC等，HTTP的文本格式和头部信息较多，导致传输的数据量较大，可能会增加性能开销。同时需要绑定ip或域名，扩展性相对RPC来说较弱。\",\"RPC调用： RPC调用是使用二进制协议进行通信，传输的数据量小，性能好，后期扩展方便。但是相对于HTTP调用，RPC相对要复杂一些，需要额外的开发工作。\",\"MQ调用：同RPC调用一样，需要额外的开发工作，MQ调用不适合本例子的使用场景，所以不做讨论。\"]},\"12\":{\"h\":\"外语学习\"},\"13\":{\"h\":\"文章\"},\"14\":{\"h\":\"编程\"}},\"dirtCount\":0,\"index\":[[\"编程\",{\"0\":{\"14\":1}}],[\"文章\",{\"0\":{\"13\":1}}],[\"文本排版比较麻烦\",{\"1\":{\"11\":1}}],[\"外语学习\",{\"0\":{\"12\":1}}],[\"所以不做讨论\",{\"1\":{\"11\":1}}],[\"所以这里必须重新封装一个接口以提供给b使用\",{\"1\":{\"8\":1}}],[\"同rpc调用一样\",{\"1\":{\"11\":1}}],[\"同时需要绑定ip或域名\",{\"1\":{\"11\":1}}],[\"同时提供方便\",{\"1\":{\"10\":1}}],[\"需要额外的开发工作\",{\"1\":{\"11\":2}}],[\"后期扩展方便\",{\"1\":{\"11\":1}}],[\"性能好\",{\"1\":{\"11\":1}}],[\"传输的数据量小\",{\"1\":{\"11\":1}}],[\"扩展性相对rpc来说较弱\",{\"1\":{\"11\":1}}],[\"导致传输的数据量较大\",{\"1\":{\"11\":1}}],[\"导出的文件会比较大\",{\"1\":{\"11\":1}}],[\"导出文件的方式\",{\"1\":{\"11\":1}}],[\"http的文本格式和头部信息较多\",{\"1\":{\"11\":1}}],[\"http调用相对来说比较简单易用\",{\"1\":{\"11\":1}}],[\"http调用\",{\"1\":{\"11\":2}}],[\"方便调试和排查问题\",{\"1\":{\"11\":1}}],[\"它使用明文文本进行通信\",{\"1\":{\"11\":1}}],[\"而且文件格式\",{\"1\":{\"11\":1}}],[\"就是数据量大的时候\",{\"1\":{\"11\":1}}],[\"财务数据等\",{\"1\":{\"11\":1}}],[\"销售数据\",{\"1\":{\"11\":1}}],[\"适合办公类的数据\",{\"1\":{\"11\":1}}],[\"rpc相对要复杂一些\",{\"1\":{\"11\":1}}],[\"rpc调用是使用二进制协议进行通信\",{\"1\":{\"11\":1}}],[\"rpc调用\",{\"1\":{\"11\":2}}],[\"re\",{\"0\":{\"1\":1}}],[\"提供接口给b团队调用\",{\"1\":{\"11\":1}}],[\"提供有用的错误信息\",{\"1\":{\"10\":1}}],[\"调用方式\",{\"0\":{\"11\":1}}],[\"最好是要有版本控制方便后续跟进\",{\"1\":{\"10\":1}}],[\"比如导出excel等文件交给b团队\",{\"1\":{\"11\":1}}],[\"比如\",{\"1\":{\"10\":1,\"11\":2}}],[\"比如我需要开发vue\",{\"1\":{\"4\":1}}],[\"日常开发中虽然不能说完全满足上述条件\",{\"1\":{\"10\":1}}],[\"日志和监控\",{\"1\":{\"10\":1}}],[\"还可能需要根据具体情况进一步定制解决方案\",{\"1\":{\"10\":1}}],[\"可能会增加性能开销\",{\"1\":{\"11\":1}}],[\"可靠的服务\",{\"1\":{\"10\":1}}],[\"可以使用\",{\"1\":{\"10\":1}}],[\"可以方便管理多个nodejs版本\",{\"1\":{\"4\":1}}],[\"可以只安装node\",{\"1\":{\"3\":1}}],[\"为二方团队提供必要的培训和文档\",{\"1\":{\"10\":1}}],[\"为指定的版本设置一个别名\",{\"1\":{\"5\":1}}],[\"建立良好的沟通渠道\",{\"1\":{\"10\":1}}],[\"沟通和培训\",{\"1\":{\"10\":1}}],[\"实现适当的错误处理机制\",{\"1\":{\"10\":1}}],[\"在实际应用中\",{\"1\":{\"10\":1}}],[\"在api设计中考虑到可能的故障情况\",{\"1\":{\"10\":1}}],[\"在服务提供方实现详细的日志记录和监控机制\",{\"1\":{\"10\":1}}],[\"在服务提供方\",{\"1\":{\"10\":1}}],[\"故障处理\",{\"1\":{\"10\":2}}],[\"考虑实现api的版本控制\",{\"1\":{\"10\":1}}],[\"考虑在服务提供方中对返回的数据进行脱敏处理\",{\"1\":{\"10\":1}}],[\"版本控制\",{\"1\":{\"10\":1}}],[\"并为双方提供法律保障\",{\"1\":{\"10\":1}}],[\"并且由于给表\",{\"1\":{\"8\":1}}],[\"限制等\",{\"1\":{\"10\":1}}],[\"期限\",{\"1\":{\"10\":1}}],[\"明确数据使用的条件\",{\"1\":{\"10\":1}}],[\"签订明确的服务合同和协议\",{\"1\":{\"10\":1}}],[\"合同和协议\",{\"1\":{\"10\":1}}],[\"合规性等方面进行考虑\",{\"1\":{\"7\":1}}],[\"仅返回二方团队所需的最小化数据\",{\"1\":{\"10\":1}}],[\"数据传递可以有多种方式\",{\"1\":{\"11\":1}}],[\"数据脱敏和最小化原则\",{\"1\":{\"10\":2}}],[\"数据隐私问题\",{\"1\":{\"9\":1}}],[\"数据隐私\",{\"0\":{\"9\":1},\"1\":{\"7\":1}}],[\"认证等方式\",{\"1\":{\"10\":1}}],[\"oauth\",{\"1\":{\"10\":1}}],[\"密钥\",{\"1\":{\"10\":1}}],[\"确保两个团队之间能够及时交流和解决问题\",{\"1\":{\"10\":1}}],[\"确保在出现问题时能够进行有效的调查\",{\"1\":{\"10\":1}}],[\"确保只有授权的人员能够访问敏感数据\",{\"1\":{\"10\":1}}],[\"确保提供清晰\",{\"1\":{\"10\":1}}],[\"中实现严格的访问控制和权限管理机制\",{\"1\":{\"10\":1}}],[\"访问控制和权限管理\",{\"1\":{\"10\":2}}],[\"以上建议旨在确保数据的安全性和合规性\",{\"1\":{\"10\":1}}],[\"以确保对接口进行变更时不会影响到二方系统的正常运行\",{\"1\":{\"10\":1}}],[\"以便他们更好地使用服务\",{\"1\":{\"10\":1}}],[\"以便二方团队能够更好地排除问题\",{\"1\":{\"10\":1}}],[\"以便二方团队能够方便地调用和集成\",{\"1\":{\"10\":1}}],[\"以便随时追踪和审计数据的访问情况\",{\"1\":{\"10\":1}}],[\"以减少敏感信息的泄露风险\",{\"1\":{\"10\":1}}],[\"以防止敏感信息泄露\",{\"1\":{\"9\":1}}],[\"易于理解的api接口\",{\"1\":{\"10\":1}}],[\"稳定\",{\"1\":{\"10\":1}}],[\"定义清晰的api接口\",{\"1\":{\"10\":1}}],[\"须满足以下条件\",{\"1\":{\"10\":1}}],[\"一个合理的数据提供\",{\"1\":{\"10\":1}}],[\"只提供必要的数据\",{\"1\":{\"9\":1}}],[\"只需要关心接口如何使用即可\",{\"1\":{\"8\":1}}],[\"主要考虑数据脱敏\",{\"1\":{\"9\":1}}],[\"弊远大于利\",{\"1\":{\"8\":1}}],[\"带来其他风险\",{\"1\":{\"8\":1}}],[\"但是相对于http调用\",{\"1\":{\"11\":1}}],[\"但是相对于二进制协议\",{\"1\":{\"11\":1}}],[\"但是缺点也很明显\",{\"1\":{\"11\":1}}],[\"但是有些条件必须是要考虑的\",{\"1\":{\"10\":1}}],[\"但是\",{\"1\":{\"8\":1}}],[\"直接给表可以消除业务耦合问题\",{\"1\":{\"8\":1}}],[\"那么a和b的耦合度就很高\",{\"1\":{\"8\":1}}],[\"b系统不需要关心a系统如何实现\",{\"1\":{\"8\":1}}],[\"b使用接口时\",{\"1\":{\"8\":1}}],[\"b依赖于a\",{\"1\":{\"8\":1}}],[\"b团队\",{\"1\":{\"7\":1}}],[\"这种方式比较简单\",{\"1\":{\"11\":1}}],[\"这里又可以有多种实现方式\",{\"1\":{\"11\":1}}],[\"这可以通过在api路径中包含版本号来实现\",{\"1\":{\"10\":1}}],[\"这有助于规范数据共享的方式\",{\"1\":{\"10\":1}}],[\"这样会相应给出数据库相关信息\",{\"1\":{\"8\":1}}],[\"这样就需要管理多版本nodejs\",{\"1\":{\"4\":1}}],[\"这个数据a和b系统都需要使用\",{\"1\":{\"8\":1}}],[\"首先\",{\"1\":{\"8\":1}}],[\"业务耦合\",{\"0\":{\"8\":1}}],[\"安全性和合规性\",{\"0\":{\"10\":1}}],[\"安全性\",{\"1\":{\"7\":1}}],[\"安装指定版本的node\",{\"1\":{\"5\":1}}],[\"从业务耦合\",{\"1\":{\"7\":1}}],[\"思考方向\",{\"1\":{\"7\":1}}],[\"问a系统应该如何向b系统提供数据服务\",{\"1\":{\"7\":1}}],[\"问题场景\",{\"0\":{\"7\":1}}],[\"防止敲诈到自己人\",{\"1\":{\"7\":1}}],[\"的敲诈系统想要使用a系统人员数据\",{\"1\":{\"7\":1}}],[\"的博客\",{\"1\":{\"3\":1}}],[\"二方\",{\"1\":{\"7\":1}}],[\"已有查询所有法外狂徒的成员信息的业务功能\",{\"1\":{\"7\":1}}],[\"api接口文档\",{\"1\":{\"10\":1}}],[\"api\",{\"1\":{\"10\":1}}],[\"a团队系统\",{\"1\":{\"10\":1}}],[\"a系统需要对数据进行脱敏处理\",{\"1\":{\"9\":1}}],[\"a系统提供给b系统的人员数据\",{\"1\":{\"9\":1}}],[\"a系统便无法对b用户进行鉴权和流量控制\",{\"1\":{\"8\":1}}],[\"a和b的修改都会影响到对方\",{\"1\":{\"8\":1}}],[\"a负责人员系统\",{\"1\":{\"7\":1}}],[\"alias\",{\"1\":{\"5\":1}}],[\"坑蒙拐骗团队a和敲诈勒索团队b\",{\"1\":{\"7\":1}}],[\"张三法外狂徒公司有两个团队\",{\"1\":{\"7\":1}}],[\"如grpc等\",{\"1\":{\"11\":1}}],[\"如何思考\",{\"1\":{\"7\":1}}],[\"如何对二方提供服务\",{\"0\":{\"6\":1}}],[\"如果可能\",{\"1\":{\"10\":1}}],[\"如果直接使用原来接口\",{\"1\":{\"8\":1}}],[\"如果是开发使用\",{\"1\":{\"4\":1}}],[\"如果只是搭建博客使用\",{\"1\":{\"3\":1}}],[\"uninstall\",{\"1\":{\"5\":1}}],[\"use\",{\"1\":{\"5\":1}}],[\"卸载指定版本的node\",{\"1\":{\"5\":1}}],[\"<name>\",{\"1\":{\"5\":1}}],[\"<version>\",{\"1\":{\"5\":4}}],[\"current\",{\"1\":{\"5\":1}}],[\"csdn博客\",{\"1\":{\"3\":1,\"4\":1}}],[\"显示当前正在使用的node\",{\"1\":{\"5\":1}}],[\"ls\",{\"1\":{\"5\":1}}],[\"列出所有已安装的node\",{\"1\":{\"5\":1}}],[\"使用指定版本的node\",{\"1\":{\"5\":1}}],[\"install\",{\"1\":{\"5\":1}}],[\"教程\",{\"1\":{\"4\":1}}],[\"详细\",{\"1\":{\"4\":1}}],[\"推荐安装教程\",{\"1\":{\"4\":1}}],[\"推荐教程\",{\"1\":{\"3\":1}}],[\"我的方案是使用nvm\",{\"1\":{\"4\":1}}],[\"单个安装就不方便\",{\"1\":{\"4\":1}}],[\"0\",{\"1\":{\"4\":1}}],[\"博客搭建使用的是18\",{\"1\":{\"4\":1}}],[\"18\",{\"1\":{\"4\":1}}],[\"1\",{\"1\":{\"4\":1}}],[\"16\",{\"1\":{\"4\":1}}],[\"工作使用的nodejs版本是14\",{\"1\":{\"4\":1}}],[\"nvm常用指令\",{\"0\":{\"5\":1}}],[\"nvm\",{\"1\":{\"4\":1,\"5\":6}}],[\"nvm安装和使用保姆级教程\",{\"1\":{\"4\":1}}],[\"nvm安装\",{\"0\":{\"4\":1}}],[\"nodejs下载\",{\"1\":{\"3\":1}}],[\"node\",{\"0\":{\"2\":1,\"3\":1},\"1\":{\"3\":1}}],[\"not\",{\"0\":{\"1\":1}}],[\"whf\",{\"1\":{\"3\":1}}],[\"超详细\",{\"1\":{\"3\":1}}],[\"js版本\",{\"1\":{\"5\":2}}],[\"js下载安装及环境配置教程\",{\"1\":{\"3\":1}}],[\"js\",{\"1\":{\"3\":1,\"5\":3}}],[\"js安装\",{\"0\":{\"3\":1}}],[\"js安装指南\",{\"0\":{\"2\":1}}],[\"everything\",{\"0\":{\"1\":1}}],[\"mq调用不适合本例子的使用场景\",{\"1\":{\"11\":1}}],[\"mq调用\",{\"1\":{\"11\":1}}],[\"mq调用等\",{\"1\":{\"11\":1}}],[\"memorising\",{\"0\":{\"1\":1}}],[\"my\",{\"0\":{\"1\":1}}],[\"for\",{\"0\":{\"1\":1}}],[\"forgetful\",{\"0\":{\"1\":1}}],[\"system\",{\"0\":{\"1\":1}}],[\"you\",{\"0\":{\"1\":1}}],[\"将你的个人介绍和档案放置在此处\",{\"1\":{\"0\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
